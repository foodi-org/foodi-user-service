syntax = "proto3";

package foodiUserService;
option go_package="github.com/foodi-org/foodi-user-service";

// 用户类型枚举
enum UserCoup {
  BUYER = 0; // 普通用户
  MERCHANT = 1; // 商家用户
  RIDER = 2; // 配送骑手
}

// 用户操作类型枚举
enum ActionCoup {
  ADD = 0; // 新增类型。点赞或者收藏文章等操作类型
  Cancel = 1; // 取消类型。取消点赞或者取消收藏等操作类型
}

message OKReply {
  bool ok = 1;
}

message TokenRequest {
  string username = 1;
  string password = 2;
  UserCoup type = 3;
}

message TokenReply {
  string token = 1;
}

message RegisterRequest {
  string type = 1;
  string phone = 2;
  string code = 3;
}

message RegisterReply {
  bool ok = 1;
  string token = 2;
  int64 uid = 3;
}

message UserRequest {
  string Uid = 1;
}

message UserReply {
  string Name = 1;
  string NikeName = 2;
  string Image = 3;
  int32 LV = 4;
}

message UserDetailRequest {
  string Uid = 1;
}

message UserDetailReply {
  string Name = 1;
  string NikeName = 2;
  string Image = 3;
  int32 Age = 4;
  string Gender = 5;
  string Birthday = 6;
  string Region = 7;
  int32 LV = 8;
  int32 VIP = 9;
}

// 创建文章
message CreateArticleRequest {
  int64 Uid = 1; // 用户id
  string Title = 2; // 标题
  string Content = 3; // 文章内容
  string Type = 4; // 文章类型
  repeated string URL = 5; // 资源地址
  string Region = 6; // 显示的地域
  double Longitude = 7; // 显示定位的经度
  double latitude = 8; // 显示定位的纬度
  int64 MerchantID = 9; // 关联的商家id
  string Cover = 10; // 封面
}

// 评论
message AddCommentRequest {
  int64 Uid = 1; // 发布评论的用户id
  int64 ArticleID = 2; // 文章id
  int64 ParentID = 3; // 评论的父id
  string Content = 4; // 回复内容
  bool IsAnonymous = 5; // 是否匿名
}

// 点赞
message UpRequest {
  int64 Uid = 1; // 发起点赞用户id
  int64 ArticleID = 2; // 文章id
  int64 CommentID = 3; // 评论id
  ActionCoup Action = 4; // up: 点赞; down: 取消点赞
}

// 文章收藏
message SaveArticleRequest {
  int64 Uid = 1;
  int64 ArticleID = 2;
  ActionCoup Action = 3; // save: 收藏; cancel: 取消收藏
}

// 账号服务
service Account {
  rpc Token(TokenRequest) returns (TokenReply);
  rpc Register(RegisterRequest) returns (RegisterReply);
}

service User {
  rpc BaseInfo(UserRequest) returns(UserReply);
  rpc DetailInfo(UserDetailRequest) returns (UserDetailReply);
  rpc CreateArticle(CreateArticleRequest) returns (OKReply);
  rpc AddComment(AddCommentRequest) returns (OKReply);
  rpc Up(UpRequest) returns (OKReply);
  rpc SaveArticle(SaveArticleRequest) returns (OKReply);
}
