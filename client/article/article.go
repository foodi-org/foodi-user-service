// Code generated by goctl. DO NOT EDIT.
// Source: foodiUserService.proto

package article

import (
	"context"

	"github.com/foodi-org/foodi-user-service/pb/github.com/foodi-org/foodi-user-service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCommentRequest     = foodi_user_service.AddCommentRequest
	ArticleInfo           = foodi_user_service.ArticleInfo
	ArticleListReply      = foodi_user_service.ArticleListReply
	ArticleListRequest    = foodi_user_service.ArticleListRequest
	ArticleRefreshRequest = foodi_user_service.ArticleRefreshRequest
	Author                = foodi_user_service.Author
	CollectArticleRequest = foodi_user_service.CollectArticleRequest
	CreateArticleRequest  = foodi_user_service.CreateArticleRequest
	DelArticleRequest     = foodi_user_service.DelArticleRequest
	Draft                 = foodi_user_service.Draft
	DraftListReply        = foodi_user_service.DraftListReply
	DraftListRequest      = foodi_user_service.DraftListRequest
	OKReply               = foodi_user_service.OKReply
	ReadHistoryRequest    = foodi_user_service.ReadHistoryRequest
	RegisterReply         = foodi_user_service.RegisterReply
	RegisterRequest       = foodi_user_service.RegisterRequest
	TokenReply            = foodi_user_service.TokenReply
	TokenRequest          = foodi_user_service.TokenRequest
	UpRequest             = foodi_user_service.UpRequest
	UserDetailReply       = foodi_user_service.UserDetailReply
	UserDetailRequest     = foodi_user_service.UserDetailRequest
	UserImageRequest      = foodi_user_service.UserImageRequest
	UserReply             = foodi_user_service.UserReply
	UserRequest           = foodi_user_service.UserRequest

	Article interface {
		// 新增文章
		CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*OKReply, error)
		// 评论文章或者回复评论
		AddComment(ctx context.Context, in *AddCommentRequest, opts ...grpc.CallOption) (*OKReply, error)
		// 点赞文章或者评论
		Up(ctx context.Context, in *UpRequest, opts ...grpc.CallOption) (*OKReply, error)
		// 收藏文章列表 & 取消收藏
		CollectArticle(ctx context.Context, in *CollectArticleRequest, opts ...grpc.CallOption) (*OKReply, error)
		// 删除文章
		DelArticle(ctx context.Context, in *DelArticleRequest, opts ...grpc.CallOption) (*OKReply, error)
		// 获取用户草稿文章列表
		DraftList(ctx context.Context, in *DraftListRequest, opts ...grpc.CallOption) (*DraftListReply, error)
		// 获取用户最近一周的文章访问历史记录
		ReadHistory(ctx context.Context, in *ReadHistoryRequest, opts ...grpc.CallOption) (*ArticleListReply, error)
		// 用户下滑继续获取文章列表
		ArticleList(ctx context.Context, in *ArticleListRequest, opts ...grpc.CallOption) (*ArticleListReply, error)
		// 用户下拉刷新文章列表
		ArticleRefresh(ctx context.Context, in *ArticleRefreshRequest, opts ...grpc.CallOption) (*ArticleListReply, error)
	}

	defaultArticle struct {
		cli zrpc.Client
	}
)

func NewArticle(cli zrpc.Client) Article {
	return &defaultArticle{
		cli: cli,
	}
}

// 新增文章
func (m *defaultArticle) CreateArticle(ctx context.Context, in *CreateArticleRequest, opts ...grpc.CallOption) (*OKReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.CreateArticle(ctx, in, opts...)
}

// 评论文章或者回复评论
func (m *defaultArticle) AddComment(ctx context.Context, in *AddCommentRequest, opts ...grpc.CallOption) (*OKReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

// 点赞文章或者评论
func (m *defaultArticle) Up(ctx context.Context, in *UpRequest, opts ...grpc.CallOption) (*OKReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.Up(ctx, in, opts...)
}

// 收藏文章列表 & 取消收藏
func (m *defaultArticle) CollectArticle(ctx context.Context, in *CollectArticleRequest, opts ...grpc.CallOption) (*OKReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.CollectArticle(ctx, in, opts...)
}

// 删除文章
func (m *defaultArticle) DelArticle(ctx context.Context, in *DelArticleRequest, opts ...grpc.CallOption) (*OKReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.DelArticle(ctx, in, opts...)
}

// 获取用户草稿文章列表
func (m *defaultArticle) DraftList(ctx context.Context, in *DraftListRequest, opts ...grpc.CallOption) (*DraftListReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.DraftList(ctx, in, opts...)
}

// 获取用户最近一周的文章访问历史记录
func (m *defaultArticle) ReadHistory(ctx context.Context, in *ReadHistoryRequest, opts ...grpc.CallOption) (*ArticleListReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.ReadHistory(ctx, in, opts...)
}

// 用户下滑继续获取文章列表
func (m *defaultArticle) ArticleList(ctx context.Context, in *ArticleListRequest, opts ...grpc.CallOption) (*ArticleListReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.ArticleList(ctx, in, opts...)
}

// 用户下拉刷新文章列表
func (m *defaultArticle) ArticleRefresh(ctx context.Context, in *ArticleRefreshRequest, opts ...grpc.CallOption) (*ArticleListReply, error) {
	client := foodi_user_service.NewArticleClient(m.cli.Conn())
	return client.ArticleRefresh(ctx, in, opts...)
}
