// Code generated by goctl. DO NOT EDIT.
// Source: foodi-account-service.proto

package account

import (
	"context"

	"github.com/foodi-org/foodi-user-service/github.com/foodi-org/foodi-user-service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReply      = foodi_user_service.LoginReply
	LoginRequest    = foodi_user_service.LoginRequest
	RegisterReply   = foodi_user_service.RegisterReply
	RegisterRequest = foodi_user_service.RegisterRequest

	Account interface {
		// 普通用户注册
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
		// 用户登录
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	}

	defaultAccount struct {
		cli zrpc.Client
	}
)

func NewAccount(cli zrpc.Client) Account {
	return &defaultAccount{
		cli: cli,
	}
}

// 普通用户注册
func (m *defaultAccount) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	client := foodi_user_service.NewAccountClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

// 用户登录
func (m *defaultAccount) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	client := foodi_user_service.NewAccountClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
